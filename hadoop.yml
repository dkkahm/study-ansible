- name: set common things with root
  hosts: all
  become: yes
  vars:
    hosts_path: /etc/hosts
  tasks:
  - name: add host to /etc/hosts
    lineinfile:
      path: "{{ hosts_path }}"
      line: "{{ item['ip'] }} {{item['hostname'] }}"
    loop: "{{ hadoop_hosts }}"
  - name: disable firewalld
    service:
      name: firewalld
      state: stopped
      enabled: False
  - name: install openjdk
    package:
      name: java-1.8.0-openjdk-devel
      state: present
  - name: get java_home
    shell: "dirname $(dirname $(readlink -f $(which javac)))"
    register: java_home
  - name: add java_home to profile
    lineinfile:
      path: /etc/profile
      line: "{{ item }}"
    loop:
    - export JAVA_HOME={{ java_home['stdout_lines'][0] }}
    - export PATH=$PATH:$JAVA_HOME/bin
  - name: add java_home to /etc/environment
    lineinfile:
      path: /etc/environment
      line: "{{ item }}"
    loop:
    - JAVA_HOME={{ java_home['stdout_lines'][0] }}
  - name: extract hadoop to /usr/local
    unarchive:
      src: "{{ hadoop_tarball }}"
      dest: "{{ usr_local }}"
  - name: symbolic link to hadoop present
    file:
      src: "{{ usr_local }}/{{ hadoop_basename }}"
      dest: "{{ hadoop_home }}"
      state: link
  - name: add hadoop_home to profile
    lineinfile:
      path: /etc/profile
      line: "{{ item }}"
    loop:
    - export HADOOP_HOME={{ hadoop_home }}
    - export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin
- name: set common tasks
  hosts: all
  tasks:
  - name: ssh-keygen
    connection: local
    command: "ssh-keygen -b 2048 -t rsa -f /home/{{ hadoop_user }}/.ssh/id_rsa -q -N ''"
    ignore_errors: yes
    run_once: true
  - name: import id_rsa.pub
    connection: local
    command: "cat /home/{{ hadoop_user }}/.ssh/id_rsa.pub"
    register: id_pub
    run_once: true
  - name: copy id to hosts
    lineinfile:
      dest: /home/{{ hadoop_user }}/.ssh/authorized_keys
      line: "{{ id_pub.stdout }}"
  - name: mkdir data folder
    file:
      path: "{{ hadoop_home }}/data"
      state: directory
  - name: set core-site.xml
    xml:
      path: "{{ hadoop_home }}/etc/hadoop/core-site.xml"
      xpath: "/configuration"
      input_type: xml
      pretty_print: yes
      set_children:
        - "<property><name>fs.defaultFS</name><value>hdfs://{{ hadoop_namenode }}</value></property>"
  - name: set hdfs-site.xml
    xml:
      path: "{{ hadoop_home }}/etc/hadoop/hdfs-site.xml"
      xpath: "/configuration"
      input_type: xml
      pretty_print: yes
      set_children:
        - "<property><name>dfs.replication</name><value>{{ hadoop_slaves | length }}</value></property>"
        - "<property><name>dfs.name.dir</name><value>{{ hadoop_home }}/data/namenode</value></property>"
        - "<property><name>dfs.data.dir</name><value>{{ hadoop_home }}/data/datanode</value></property>"
  - name: copy mapred-site.xml.templates to mapred-site.xml
    command: cp {{ hadoop_home }}/etc/hadoop/mapred-site.xml.template {{ hadoop_home }}/etc/hadoop/mapred-site.xml
  - name: set mapred-site.xml
    xml:
      path: "{{ hadoop_home }}/etc/hadoop/mapred-site.xml"
      xpath: "/configuration"
      input_type: xml
      pretty_print: yes
      set_children:
        - "<property><name>mapreduce.framework.name</name><value>yarn</value></property>"
  - name: set yarn-site.xml
    xml:
      path: "{{ hadoop_home }}/etc/hadoop/yarn-site.xml"
      xpath: "/configuration"
      input_type: xml
      pretty_print: yes
      set_children:
        - "<property><name>yarn.resourcemanager.hostname</name><value>{{ hadoop_namenode }}</value></property>"
        - "<property><name>yarn.nodemanager.aux-services</name><value>mapreduce_shuffle</value></property>"
- name: set namenode
  hosts: namenode
  tasks:
  - name: truncate slaves
    command: truncate --size=0 {{ hadoop_home }}/etc/hadoop/slaves
  - name: setup slaves
    lineinfile:
      path: "{{ hadoop_home }}/etc/hadoop/slaves"
      line: "{{ item }}"
    loop: "{{ hadoop_slaves }}"
  - name: format namenode
    command: "{{ hadoop_home }}/bin/hadoop namenode -format -force"
    environment:
      JAVA_HOME: "{{ java_home['stdout_lines'][0] }}"
      HADOOP_HOME: "{{ hadoop_home }}"
